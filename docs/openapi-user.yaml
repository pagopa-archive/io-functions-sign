openapi: 3.0.3
info:
  title: IO Sign - User API
  version: 0.0.1
security:
  - FunctionsKey: []
paths:
  /signature-requests/{id}:
    get:
      operationId: getSignatureRequestById
      summary: Get a Signature Request By Id
      parameters:
        - in: path
          name: id
          schema:
            type: string
            description: Entity Id
            format: ulid
            example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          required: true
        - in: header
          name: FiscalCode
          schema:
            type: string
            description: User's fiscal code.
            format: FiscalCode
            x-import: "@pagopa/ts-commons/lib/strings"
            example: SPNDNL80R13C555X
          required: true
      responses:
        "200":
          description: The Signature Request detail
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignatureRequestDetailView"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"

  /qtsp/clauses:
    get:
      operationId: getQtspClausesMetadata
      summary: Get clauses list and MRC from QTSP
      responses:
        "200":
          description: The QTSP clauses list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QtspClausesMetadata"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"

  /signatures/{id}:
    get:
      operationId: getSignatureById
      summary: Get a Signature By Id
      parameters:
        - in: path
          name: id
          schema:
            type: string
            description: Entity Id
            format: ulid
            example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          required: true
        - in: header
          name: FiscalCode
          schema:
            type: string
            description: User's fiscal code.
            format: FiscalCode
            x-import: "@pagopa/ts-commons/lib/strings"
            example: SPNDNL80R13C555X
          required: true
      responses:
        "200":
          description: The Signature Request detail
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignatureDetailView"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"

  /signatures:
    post:
      operationId: createSignature
      summary: Create a Signature from SignatureRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSignatureBody"
      parameters:
        - in: header
          name: FiscalCode
          schema:
            type: string
            description: User's fiscal code.
            format: FiscalCode
            x-import: "@pagopa/ts-commons/lib/strings"
            example: SPNDNL80R13C555X
          required: true
      responses:
        "201":
          description: Signature created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignatureDetailView"
        "400":
          $ref: "#/components/responses/BadRequest"
        "403":
          $ref: "#/components/responses/Forbidden"

components:
  securitySchemes:
    FunctionsKey:
      type: apiKey
      name: X-Functions-Key
      in: header

  responses:
    NotFound:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-sign/v1.0.0-RELEASE/openapi-issuer.yaml#/components/responses/NotFound"
    BadRequest:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-sign/v1.0.0-RELEASE/openapi-issuer.yaml#/components/responses/BadRequest"
    Forbidden:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-sign/v1.0.0-RELEASE/openapi-issuer.yaml#/components/responses/Forbidden"
    Unexpected:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-sign/v1.0.0-RELEASE/openapi-issuer.yaml#/components/responses/Unexpected"
  schemas:
    Id:
      type: string
      description: Entity Id
      format: ulid
      example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
    Timestamp:
      type: string
      format: UTCISODateFromString
      description: A date-time field in ISO-8601 format and UTC timezone.
      x-import: "@pagopa/ts-commons/lib/dates"
      example: "2018-10-13T00:00:00.000Z"

    Document:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Id"
        metadata:
          $ref: "#/components/schemas/DocumentMetadata"
        created_at:
          $ref: "#/components/schemas/Timestamp"
        updated_at:
          $ref: "#/components/schemas/Timestamp"
      required:
        - id
        - status
        - metadata
        - created_at
        - updated_at

    DocumentMetadata:
      type: object
      properties:
        title:
          type: string
        signature_fields:
          type: array
          items:
            $ref: "#/components/schemas/SignatureField"

    SignatureFieldAttributes:
      type: object
      properties:
        unique_name:
          type: string

    SignatureFieldToBeCreatedAttributes:
      type: object
      properties:
        coordinates:
          type: object
          properties:
            x: { type: number, minimum: 0 }
            y: { type: number, minimum: 0 }
        page:
          type: number
          minimum: 0
        size:
          type: object
          properties:
            w: { type: number, minimum: 0 }
            h: { type: number, minimum: 0 }
    Clause:
      type: object
      properties:
        title:
          type: string
        type:
          $ref: "#/components/schemas/ClausesType"
      required:
        - title
        - type

    ClausesType:
      description: |
        Signature request status:
        * `REQUIRED` - The clause is mandatory and the user sees it already accepted.
        * `UNFAIR` - The clause is unfair and the user must explicitly accept it to continue
        * `OPTIONAL` - The clause is optional and the user can also decide not to accept it
      type: string
      x-extensible-enum:
        - REQUIRED
        - UNFAIR
        - OPTIONAL

    SignatureField:
      type: object
      properties:
        attrs:
          type: object
          oneOf:
            - $ref: "#/components/schemas/SignatureFieldAttributes"
            - $ref: "#/components/schemas/SignatureFieldToBeCreatedAttributes"
        clause:
          $ref: "#/components/schemas/Clause"
      required:
        - unique_name
        - clause
    DocumentUploaded:
      allOf:
        - $ref: "#/components/schemas/Document"
        - type: object
          properties:
            status:
              type: string
              enum:
                - READY
            uploaded_at:
              $ref: "#/components/schemas/Timestamp"
            url:
              type: string
              format: uri
          required:
            - status
            - uploaded_at
            - url

    SignatureRequestDetailView:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Id"
        expires_at:
          $ref: "#/components/schemas/Timestamp"
        status:
          $ref: "#/components/schemas/ForwardedSignatureRequestStatus"
        documents:
          type: array
          items:
            $ref: "#/components/schemas/DocumentUploaded"
      required:
        - id
        - expires_at
        - status
        - documents

    ForwardedSignatureRequestStatus:
      description: |
        Signature request status:
        * `WAIT_FOR_SIGNATURE` - The signature request has been sent to the user and is awaiting signature
        * `SIGNED` - The signature request was successfully signed.
      type: string
      x-extensible-enum:
        - WAIT_FOR_SIGNATURE
        - SIGNED

    QtspClausesMetadata:
      type: object
      properties:
        clauses:
          type: array
          items:
            $ref: "#/components/schemas/QtspClause"
          minItems: 1
          uniqueItems: true
        mrc_document_url:
          type: string
          format: uri
        privacy_document_url:
          type: string
          format: uri
        tos_document_url:
          type: string
          format: uri
      required:
        - clauses
        - mrc_document_url
        - privacy_document_url
        - tos_document_url

    QtspClause:
      type: object
      properties:
        text:
          type: string
      required:
        - text

    Email:
      type: string
      description: User's email.
      format: EmailString
      x-import: "@pagopa/ts-commons/lib/strings"
      example: me@example.com

    publicKey:
      type: string
      format: base64url
      description: PEM public key encoded in base64

    SamlAssertion:
      type: string
      format: base64url
      description: SPID SAML assertion encoded in base64

    ClausesSignature:
      properties:
        type:
          $ref: "#/components/schemas/ClausesSignatureType"
        attrs:
          type: string
          description: uniqueName or base64(Coords) base64({x,y,w,h,page})
      description: accepted signature clause
      required:
        - type
        - attrs

    ClausesSignatureType:
      type: string
      x-extensible-enum:
        - COORDS
        - UNIQUE_NAME

    DocumentSignature:
      type: object
      properties:
        document_id:
          type: string
          format: ulid
        signature:
          type: string
          format: base64url
          description: Signature of document digest concatenated with document clauses
        clauses:
          type: array
          items:
            $ref: "#/components/schemas/ClausesSignature"
      required:
        - document_id
        - signature
        - clauses

    QtspClauses:
      type: object
      properties:
        accepted_clauses:
          type: array
          items:
            $ref: "#/components/schemas/QtspClause"
          minItems: 1
          uniqueItems: true
        filled_mrc_document_url:
          type: string
          format: uri
        signature:
          type: string
          format: base64url
          description: Signature of MRC digest concatenated with QTSP accepted clauses
      required:
        - accepted_clauses
        - filled_mrc_document_url
        - signature

    CreateSignatureBody:
      type: object
      properties:
        signature_request_id:
          $ref: "#/components/schemas/Id"
        email:
          $ref: "#/components/schemas/Email"
        public_key:
          $ref: "#/components/schemas/publicKey"
        spid_saml_assertion:
          $ref: "#/components/schemas/SamlAssertion"
        document_signatures:
          type: array
          items:
            $ref: "#/components/schemas/DocumentSignature"
          minItems: 1
          uniqueItems: true
        qtsp_clauses:
          $ref: "#/components/schemas/QtspClauses"
      required:
        - signature_request_id
        - email
        - public_key
        - spid_saml_assertion
        - document_signatures
        - qtsp_clauses

    SignatureDetailView:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Id"
        signature_request_id:
          $ref: "#/components/schemas/Id"
        email:
          $ref: "#/components/schemas/Email"
        public_key:
          $ref: "#/components/schemas/publicKey"
        spid_saml_assertion:
          $ref: "#/components/schemas/SamlAssertion"
        document_signatures:
          type: array
          items:
            $ref: "#/components/schemas/DocumentSignature"
        qtsp_clauses:
          $ref: "#/components/schemas/QtspClausesMetadata"
        timestamp:
          $ref: "#/components/schemas/Timestamp"
      required:
        - id
        - signature_request_id
        - email
        - public_key
        - spid_saml_assertion
        - document_signatures
        - qtsp_clauses
        - timestamp
