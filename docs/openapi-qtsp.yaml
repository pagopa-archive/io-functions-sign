openapi: 3.0.3

info:
  title: Firma con IO QTSP
  description: Any APIs called by IO Backend to QTSP
  version: 1.0.0

paths:
  /tos:
    summary: Request terms of service
    get:
      operationId: getTos
      tags:
        - QTSP
      responses:
        "200":
          description: Terms of service to be accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TermsOfService"
        "400":
          $ref: "#/components/responses/BadRequest"
        "403":
          $ref: "#/components/responses/Forbidden"
        default:
          $ref: "#/components/responses/Unexpected"

  /challenges:
    summary: Request a challenge to QTSP
    post:
      operationId: createChallenge
      tags:
        - QTSP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateChallengeBody"
      responses:
        "201":
          description: Challenge generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Challenge"
        "400":
          $ref: "#/components/responses/BadRequest"
        "403":
          $ref: "#/components/responses/Forbidden"
        default:
          $ref: "#/components/responses/Unexpected"

  /signatures:
    summary: Get signatures for the provided hashes
    post:
      operationId: createSignature
      tags:
        - QTSP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSignatureBody"
      responses:
        "201":
          description: Signature hash generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignatureResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Challenge signature invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Challenge not found
        default:
          $ref: "#/components/responses/Unexpected"

components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemJson"
    BadRequest:
      description: Validation error on body
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemJson"
    Forbidden:
      description: You don't have enough privileges to perform this action
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemJson"
    Unexpected:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemJson"

  schemas:
    ProblemJson:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: >-
            A short, summary of the problem type. Written in english and
            readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: >-
            The HTTP status code generated by the origin server for this
            occurrence of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 200
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: There was an error processing the request
        instance:
          type: string
          format: uri
          description: >-
            An absolute URI that identifies the specific occurrence of the
            problem. It may or may not yield further information if
            dereferenced.
      required:
        - title
        - status
        - detail

    TermsOfService:
      type: array
      items:
        $ref: "#/components/schemas/TermOfService"
      description: "List of terms of service"

    TermOfService:
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          format: string
        description:
          type: string
          format: string
        link:
          type: string
          format: uri
          description: "Link to TOS"

    TermsOfServiceAccepted:
      type: string
      format: uuid

    CreateChallengeBody:
      type: object
      required:
        - fiscal_code
        - hashes_to_sign
      properties:
        fiscal_code:
          $ref: "#/components/schemas/FiscalCode"
        hashes_to_sign:
          type: array
          items:
            $ref: "#/components/schemas/DocumentHash"

    FiscalCode:
      type: string
      description: User's fiscal code.
      format: FiscalCode
      x-import: "@pagopa/ts-commons/lib/strings"
      example: SPNDNL80R13C555X

    DocumentHash:
      type: string
      description: Digest of a file.
      format: byte
      example: uU0nuZNNPgilLlLX2n2r+sSE7+N6U4DukIj3rOLvzek=

    Challenge:
      type: object
      required:
        - challenge
      properties:
        challenge:
          type: string
          format: byte

    CreateSignatureBody:
      type: object
      required:
        - tos_accepted
        - signed_challenge
        - SAML_assertion
        - public_key
        - fiscal_code
        - hashes_to_sign
        - user_email
      properties:
        tos_accepted:
          type: array
          items:
            $ref: "#/components/schemas/TermsOfServiceAccepted"
        signed_challenge:
          type: string
          format: byte
        SAML_assertion:
          type: string
          format: byte
        public_key:
          type: string
          format: byte
        fiscal_code:
          $ref: "#/components/schemas/FiscalCode"
        hashes_to_sign:
          type: array
          items:
            $ref: "#/components/schemas/DocumentHash"
        user_email:
          type: string
          format: EmailString
          x-import: "@pagopa/ts-commons/lib/strings"
          example: example@domain.com

    SignatureResponse:
      type: object
      required:
        - signed_hash
      properties:
        signed_hash:
          type: array
          items:
            type: string
