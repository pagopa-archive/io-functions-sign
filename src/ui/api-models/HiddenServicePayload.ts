/**
 * Do not edit this file it is auto-generated by io-utils / gen-api-models.
 * See https://github.com/pagopa/io-utils
 */
/* eslint-disable  */

import * as t from "io-ts";
import { CommonServicePayload } from "./CommonServicePayload";
import { CommonServiceMetadata } from "./CommonServiceMetadata";
import { withDefault } from "@pagopa/ts-commons/lib/types";

type IsVisibleBase = t.TypeOf<typeof IsVisibleBase>;
const IsVisibleBase = t.literal(false);

/**
 * A payload used to create/update a service that is hidden.
 */

// required attributes
const HiddenServicePayload2R = t.interface({});

// optional attributes
const HiddenServicePayload2O = t.partial({
  is_visible: withDefault(IsVisibleBase, false as IsVisibleBase),

  service_metadata: CommonServiceMetadata,
});

export const HiddenServicePayload2 = t.exact(
  t.intersection(
    [HiddenServicePayload2R, HiddenServicePayload2O],
    "HiddenServicePayload2"
  )
);

export type HiddenServicePayload2 = t.TypeOf<typeof HiddenServicePayload2>;

export const HiddenServicePayload = t.intersection(
  [CommonServicePayload, HiddenServicePayload2],
  "HiddenServicePayload"
);

export type HiddenServicePayload = t.TypeOf<typeof HiddenServicePayload>;
