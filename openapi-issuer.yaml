openapi: 3.0.3
info:
  title: IO Sign - Issuer API
  version: 0.1.0
servers:
  - url: https://api.io.pagopa.it/api/v1/sign
    description: Production
security:
  - SubscriptionKey: []
paths:
  /products:
    post:
      operationId: createProduct
      summary: Create a Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProductBody"
      responses:
        "201":
          description: Product created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDetailView"
        "400":
          $ref: "./components.yaml#/components/responses/BadRequest"
        "403":
          $ref: "./components.yaml#/components/responses/Forbidden"
        default:
          $ref: "./components.yaml#/components/responses/Unexpected"
  /products/{productId}:
    get:
      operationId: getProductById
      summary: Get a Product by Id
      parameters:
        - in: path
          name: productId
          schema:
            type: string
            format: ulid
          required: true
      responses:
        "200":
          description: The product detail
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDetailView"
        "403":
          $ref: "./components.yaml#/components/responses/Forbidden"
        "404":
          $ref: "./components.yaml#/components/responses/NotFound"
        default:
          $ref: "./components.yaml#/components/responses/Unexpected"
  /signature-requests:
    post:
      operationId: requestSignature
      summary: Request a Signature (creating a Signature Request)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSignatureBody"
      responses:
        "201":
          description: RequestSignature created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignatureRequestDetailView"
        "400":
          $ref: "./components.yaml#/components/responses/BadRequest"
        "403":
          $ref: "./components.yaml#/components/responses/Forbidden"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "./components.yaml#/components/schemas/ProblemJson"
        default:
          $ref: "./components.yaml#/components/responses/Unexpected"
  /signature-requests/{signatureRequestId}:
    get:
      operationId: getSignatureRequestById
      summary: Get a Signature Request By Id
      parameters:
        - in: path
          name: signatureRequestId
          schema:
            type: string
            format: ulid
          required: true
      responses:
        "200":
          description: The Signature Request detail
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignatureRequestDetailView"
        "403":
          $ref: "./components.yaml#/components/responses/Forbidden"
        "404":
          $ref: "./components.yaml#/components/responses/NotFound"
        default:
          $ref: "./components.yaml#/components/responses/Unexpected"
components:
  schemas:
    Clause:
      type: object
      properties:
        title:
          type: string
        required:
          type: boolean
      required:
        - title
        - required
    DocumentMetadata:
      type: object
      properties:
        title:
          type: string
        clauses:
          type: array
          items:
            $ref: "#/components/schemas/Clause"
          minItems: 1
          uniqueItems: true
      required:
        - title
        - clauses
    Document:
      allOf:
        - type: object
          properties:
            id:
              type: string
              format: ulid
          required:
            - id
        - $ref: "#/components/schemas/DocumentMetadata"
    ProductId:
      type: string
      format: ulid
    CreateProductBody:
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: "#/components/schemas/DocumentMetadata"
          minItems: 1
          uniqueItems: true
      required:
        - documents
    ProductDetailView:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ProductId"
        documents:
          type: array
          items:
            $ref: "#/components/schemas/DocumentMetadata"
      required:
        - id
        - documents
    RequestSignatureBody:
      type: object
      properties:
        productId:
          $ref: "#/components/schemas/ProductId"
        fiscalCode:
          $ref: "./components.yaml#/components/schemas/FiscalCode"
      required:
        - productId
        - fiscalCode
    SignatureRequestDetailView:
      type: object
      properties:
        id:
          type: string
          format: ulid
        productId:
          type: string
          format: ulid
        documents:
          type: array
          items:
            $ref: "#/components/schemas/Document"
      required:
        - id
        - productId
        - documents
